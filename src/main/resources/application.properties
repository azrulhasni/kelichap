server.port=${PORT:18080}

#Logging
#-------
#to show sql
#spring.jpa.properties.hibernate.show_sql=true
#formatting
#spring.jpa.properties.hibernate.format_sql=true
#printing parameter values in order
#logging.level.org.hibernate.orm.jdbc.bind=trace


# PostgreSQL configuration.
#-------------------------
spring.main.allow-bean-definition-overriding=true
spring.datasource.url = jdbc:postgresql://localhost:5432/kelichap
spring.datasource.driverClassName = org.postgresql.Driver
spring.datasource.username = kelichap
spring.datasource.password = abc123
spring.jpa.hibernate.ddl-auto = update
vaadin.whitelisted-packages = com.vaadin,org.vaadin,dev.hilla,com.azrul.kelichap
vaadin.excludeUrls=/swagger-ui/**,/v3/api-docs/**
spring.mvc.static-path-pattern=/swagger*
spring.jpa.defer-datasource-initialization = true

logging.level.org.atmosphere = warn
spring.mustache.check-template-location = false

#vaadin.launch-browser=true


#Spring security configuration
#-----------------------------
spring.security.oauth2.client.registration.keycloak.client-id=kelichap-client
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:9080/realms/Kelichap
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9080/realms/Kelichap
spring.security.oauth2.resourceserver.jwt.issuer-uri.jwk-set-uri=http://localhost:9080/realms/Kelichap/protocol/openid-connect/certs

jwt.auth.converter.resource-id=kelichap-client
jwt.auth.converter.principal-attribute=preferred_username
jwt.auth.api.converter.resource-id=kelichap-service
jwt.auth.api.converter.principal-attribute=preferred_username

#Minio configuration
#-------------------
minio.url=http://localhost:9000
minio.bucket=kelichap
minio.access-key=kelichap
minio.secret-key=abc123456

#Typesense configuration
#-----------------------
#protocol, host and port can be specified as comma separated arrays representing multiple nodes in a cluster deployment
typesense.protocol=http 
typesense.host=localhost
typesense.port=8108
typesense.apikey=CsNJV1e8679TXrNGIpj6mfH0Kr04mbYQ
typesense.documents.collection=kelichap-documents
typesense.users.alias=kelichap-users
typesense.users.allUsersMaxCount=4



#if aliases are null, collectiions will be used directly
#if aliases are not null, then the assumption is the aliases are pointing to collections respectively
#typesense.documents.collection.alias=kelichap-documents 
#typesense.users.collection.alias=kelichap-users

#Upload configuration
#-----------------------
executor.thread-count=10
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
server.tomcat.max-swallow-size=-1

#AI configuration
#-----------------------
spring.ai.ollama.base-url=http://localhost:11434
spring.ai.ollama.model=llama2

#Keycloak configuration
#----------------------
kelichap.keycloak.username=kelichap
kelichap.keycloak.password=abc123
kelichap.keycloak.url=http://localhost:9080/
kelichap.keycloak.client-id=kelichap-client
kelichap.keycloak.realm=Kelichap

#Keycloak - Typesense user sync configuration
#--------------------------------------------
#kelichap.keycloak.typesense.usersync.cron=0 0 0 * * *
kelichap.keycloak.typesense.usersync.cron=0 0 0 * * *
kelichap.keycloak.typesense.usersync.batchsize=100
kelichap.keycloak.typesense.usersync.immediateafterrun=true
kelichap.keycloak.typesense.usersync.immediateruncopyoonlyonempty=false

#Gotlieb configuration
#-----------------------
gotenberg.url=http://localhost:3000

#Kelichap configuration
#-----------------------
kelichap.documentNameMaxLength=10
kelichap.folderCountPerPage=7
kelichap.auditRecordCountPerPage=7
kelichap.notesCountPerPage=5
kelichap.maxFileCountPerUpload=5
kelichap.maxFileSize=4000000

#Swagger Keycloak client
#-----------------------
springdoc.swagger-ui.oauth.client-id=kelichap-client




